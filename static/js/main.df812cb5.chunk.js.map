{"version":3,"sources":["components/Repo/index.js","components/RepoList/RepoList.js","utils/http.js","Pages/RepoPage.js","actions/repos.js","components/Profile/index.js","Pages/ProfilePage.js","actions/users.js","App.js","reducers/user.js","reducers/repos.js","reducers/index.js","store.js","index.js"],"names":["Repo","name","description","language","stargazers_count","html_url","className","href","target","rel","RepoList","repoList","map","props","id","instance","axios","create","baseURL","process","responseType","get","url","params","headers","method","then","response","data","connect","state","repos","dispatch","setData","type","payload","useState","loading","setLoading","useEffect","console","log","Profile","src","avatar_url","alt","username","location","bio","twitter_username","blog","profileProps","user","followers","following","login","App","INITIAL_STATE","action","combineReducers","store","createStore","reducers","environment","render","document","querySelector"],"mappings":"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","file":"static/js/main.df812cb5.chunk.js","sourcesContent":["import React from 'react';\n\nimport { AiFillStar, AiOutlineLink } from 'react-icons/ai';\n\nimport './repo.css';\n\nfunction Repo({ name, description, language, stargazers_count, html_url }) {\n  return (\n    <li className=\"repo__card\">\n      <h2>{name}</h2>\n      <p className=\"repo__description\">{description}</p>\n      <p className=\"repo__made-with\">\n        <span>Made with: </span> {language}\n      </p>\n      <div className=\"repo__stars-link\">\n        <p>\n          <AiFillStar /> {stargazers_count}\n        </p>\n        <p>\n          <AiOutlineLink />{' '}\n          <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            View repository\n          </a>\n        </p>\n      </div>\n    </li>\n  );\n}\n\nexport default Repo;\n","import React from 'react';\nimport Repo from '../Repo';\n\nfunction RepoList({ repoList }) {\n  return (\n    <ul>\n      {repoList.map(({ name, description, language, id, stargazers_count, html_url }) => {\n        const props = { name, description, language, stargazers_count, html_url };\n        return <Repo {...props} />;\n      })}\n    </ul>\n  );\n}\n\nexport default RepoList;\n","import axios from 'axios';\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || 'https://api.github.com';\n\nconst instance = axios.create({\n  baseURL: BASE_URL,\n  responseType: 'json'\n});\n\n/**\n * @param {String} url The url for the api request (without the base)\n * @param {Object} [config]\n * @param {Object} [config.params] An object of queries that will be added to\n * the url\n * @param {Boolean} [config.accessToken] Whether or not to include the\n * access-token header\n * @returns {Observable}\n */\n\nexport function get(url, { params = {}, responseType = 'json', headers = {} } = {}) {\n  return instance({\n    url,\n    params,\n    headers,\n    responseType,\n    method: 'get'\n  }).then((response) => response.data);\n}\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setRepos } from '../actions/repos';\nimport RepoList from '../components/RepoList/RepoList';\nimport { get } from '../utils/http';\n\nfunction RepoPage({ repos, setData }) {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    get(`/users/${process.env.REACT_APP_USERNAME}/repos`)\n      .then((data) => {\n        setData(data);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, [setData]);\n\n  console.log(repos);\n  return (\n    <div className=\"repo-page\">\n      <h1>Repositories</h1>\n\n      {loading ? <div>Loading</div> : <RepoList repoList={repos} />}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return { repos: state.repos };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => {\n      dispatch(setRepos(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoPage);\n","export const SET_REPOS = 'SET_REPOS';\n\nexport const setRepos = (repos) => ({\n  type: SET_REPOS,\n  payload: repos\n});\n","import React from 'react';\n\nimport { GiWorld } from 'react-icons/gi';\nimport { FaTwitter } from 'react-icons/fa';\nimport { GoLocation } from 'react-icons/go';\nimport { AiFillGithub } from 'react-icons/ai';\n\nimport './profile.css';\n\nfunction Profile(props) {\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__image\">\n        <img src={props.avatar_url} alt={props.name} />\n      </div>\n\n      <div className=\"profile__basic-info\">\n        <h2>\n          <AiFillGithub className=\"profile__icons\" />{' '}\n          <a href={`https://github.com/${props.username}`} target=\"_blank\" rel=\"noopener noreferrer\">\n            {props.username}\n          </a>\n        </h2>\n        <div className=\"profile__name\">{props.name}</div>\n        <div className=\"profile__location\">\n          <GoLocation className=\"profile__icons\" /> {props.location}\n        </div>\n      </div>\n\n      <p className=\"profile__bio\">{props.bio}</p>\n\n      <div className=\"profile__follow-info\">\n        <div className=\"profile__followers\">\n          <h3>40</h3>\n          <p>Followers</p>\n        </div>\n        <div className=\"profile__following\">\n          <h3>36</h3>\n          <p>Following</p>\n        </div>\n      </div>\n\n      <div className=\"profile__online-presence\">\n        <a href={`https://twitter.com/${props.twitter_username}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <FaTwitter />\n        </a>\n\n        <a href={`${props.blog}`} target=\"_blank\" rel=\"noopener noreferrer\">\n          <GiWorld />\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport Profile from '../components/Profile';\nimport { get } from '../utils/http';\nimport { setUser } from '../actions/users';\n\nfunction ProfilePage({ profileProps, setData }) {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    get(`/users/${process.env.REACT_APP_USERNAME}`)\n      .then((data) => {\n        const { name, avatar_url, followers, following, location, login: username, twitter_username, blog, bio } = data;\n        setData({ name, avatar_url, followers, following, location, username, twitter_username, blog, bio });\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, [setData]);\n\n  return <>{loading ? <div>Loading</div> : <Profile {...profileProps} />}</>;\n}\n\nconst mapStateToProps = (state) => {\n  return { profileProps: state.user };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setData: (data) => {\n      dispatch(setUser(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);\n","export const SET_USER = 'SET_USER';\n\nexport const setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n","import React from 'react';\n\nimport RepoPage from './Pages/RepoPage';\nimport ProfilePage from './Pages/ProfilePage';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <ProfilePage />\n      <RepoPage />\n    </div>\n  );\n}\n\nexport default App;\n","import { SET_USER } from '../actions/users';\n\nconst INITIAL_STATE = {};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_USER:\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default user;\n","import { SET_REPOS } from '../actions/repos';\n\nconst INITIAL_STATE = [];\n\nconst repos = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_REPOS:\n      return [...state, ...action.payload];\n    default:\n      return state;\n  }\n};\n\nexport default repos;\n","import { combineReducers } from 'redux';\n\nimport user from './user';\nimport repos from './repos';\n\nexport default combineReducers({\n  user,\n  repos\n});\n","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nconst environment = process.env.NODE_ENV;\n\nconst store = createStore(\n  reducers,\n  environment === 'development' && window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './store';\n\nimport './index.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}